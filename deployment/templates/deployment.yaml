apiVersion: v1
kind: Service
metadata:
  name: rcaas-ui-service
spec:
  selector:
    app: rcaas-ui-app
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: rcaas-api-service
spec:
  selector:
    app: rcaas-api-app
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcaas-ui-app
spec:
  selector:
    matchLabels:
      app: rcaas-ui-app
  replicas: 1
  template:
    metadata:
      labels:
        app: rcaas-ui-app
    spec:
      containers:
        - name: rcaas-ui-app
          image: {{ .Values.registry }}/rcaas-ui
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rcaas-api-app
spec:
  selector:
    matchLabels:
      app: rcaas-api-app
  replicas: 1
  template:
    metadata:
      labels:
        app: rcaas-api-app
    spec:
      containers:
        - name: rcaas-api-app
          image: {{ .Values.registry }}/rcaas-api
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rcaas-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - secretName: rcaas-tls
      hosts:
        - releasecalendar.app
  rules:
    - host: releasecalendar.app
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rcaas-ui-service
                port:
                  number: 80
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: rcaas-api-service
                port:
                  number: 80

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.email }}
    privateKeySecretRef:
      name: letsencrypt
    solvers:
      - http01:
          ingress:
            class: nginx